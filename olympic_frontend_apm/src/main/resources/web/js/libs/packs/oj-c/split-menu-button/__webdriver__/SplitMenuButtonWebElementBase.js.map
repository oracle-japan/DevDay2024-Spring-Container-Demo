{"version":3,"file":"SplitMenuButtonWebElementBase.js","sourceRoot":"","sources":["SplitMenuButtonWebElementBase.ts"],"names":[],"mappings":";;;AAAA,iEAAoE;AAEpE;;;;;GAKG;AACH,MAAa,6BAA8B,SAAQ,uBAAY;IAC7D;;;;;OAKG;IACI,QAAQ;QACb,OAAO,IAAI,CAAC,WAAW,CAAS,OAAO,CAAC,CAAC;IAC3C,CAAC;IAED;;;;;OAKG;IACI,QAAQ;QACb,OAAO,IAAI,CAAC,WAAW,CAAgB,OAAO,CAAC,CAAC;IAClD,CAAC;IAED;;;;;OAKG;IACI,WAAW;QAChB,OAAO,IAAI,CAAC,WAAW,CAAU,UAAU,CAAC,CAAC;IAC/C,CAAC;IAED;;;;;OAKG;IACI,eAAe;QACpB,OAAO,IAAI,CAAC,WAAW,CAAS,MAAM,CAAC,CAAC;IAC1C,CAAC;IAED;;;;;OAKG;IACI,QAAQ;QACb,OAAO,IAAI,CAAC,WAAW,CAAkB,OAAO,CAAC,CAAC;IACpD,CAAC;IAED;;;;;OAKG;IACI,WAAW;QAChB,OAAO,IAAI,CAAC,WAAW,CAAS,UAAU,CAAC,CAAC;IAC9C,CAAC;CACF;AA5DD,sEA4DC","sourcesContent":["import { OjWebElement } from '@oracle/oraclejet-webdriver/elements';\n\n/**\n * This is the base class for oj-c-split-menu-button WebElement, and is generated from the\n * component's metadata. Do not modify these contents since they'll be replaced\n * during the next generation.\n * Put overrides into the WebElements's subclass, SplitMenuButtonWebElement.ts.\n */\nexport class SplitMenuButtonWebElementBase extends OjWebElement {\n  /**\n   * Gets the value of <code>label</code> property.\n   * Text to show in the button.\n   * @return The value of <code>label</code> property.\n   *\n   */\n  public getLabel(): Promise<string> {\n    return this.getProperty<string>('label');\n  }\n\n  /**\n   * Gets the value of <code>items</code> property.\n   * Items describe the menu items rendered by the menu button.\n   * @return The value of <code>items</code> property.\n   *\n   */\n  public getItems(): Promise<Array<object>> {\n    return this.getProperty<Array<object>>('items');\n  }\n\n  /**\n   * Gets the value of <code>disabled</code> property.\n   * Specifies that the button element should be disabled.\n   * @return The value of <code>disabled</code> property.\n   *\n   */\n  public getDisabled(): Promise<boolean> {\n    return this.getProperty<boolean>('disabled');\n  }\n\n  /**\n   * Gets the value of <code>size</code> property.\n   * Size of button\n   * @return The value of <code>size</code> property.\n   *\n   */\n  public getSizeProperty(): Promise<string> {\n    return this.getProperty<string>('size');\n  }\n\n  /**\n   * Gets the value of <code>width</code> property.\n   * Specifies that the button style width\n   * @return The value of <code>width</code> property.\n   *\n   */\n  public getWidth(): Promise<number | string> {\n    return this.getProperty<number | string>('width');\n  }\n\n  /**\n   * Gets the value of <code>chroming</code> property.\n   * Indicates in what states the button has chromings in background and border.\n   * @return The value of <code>chroming</code> property.\n   *\n   */\n  public getChroming(): Promise<string> {\n    return this.getProperty<string>('chroming');\n  }\n}\n"]}