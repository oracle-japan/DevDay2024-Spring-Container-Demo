{"version":3,"file":"SectionalLegend-14560bfb.js","sources":["../../src/UNSAFE_Legend/SectionalLegendNavUtils.ts","../../src/UNSAFE_Legend/SectionalLegend.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { InputDetail, ItemInfo, LegendSection } from './Legend.type';\n\nfunction getItem<K>(itemInfo: ItemInfo, sections: LegendSection<K>[]) {\n  const { sectionIdx, itemIdx } = itemInfo;\n\n  if (sectionIdx == -1 && itemIdx == -1) {\n    const itemsLength = sections[sections.length - 1].items.length;\n    return sections[sections.length - 1].items[itemsLength - 1];\n  }\n\n  return sections[sectionIdx].items[itemIdx];\n}\n\nfunction getNextItemInfo<K>(itemInfo: ItemInfo, sections: LegendSection<K>[]) {\n  let { itemIdx, sectionIdx } = itemInfo;\n\n  if (sectionIdx == -1 && itemIdx == -1) {\n    return {\n      itemIdx: sections[sections.length - 1].items.length - 1,\n      sectionIdx: sections.length - 1\n    };\n  }\n\n  itemIdx += 1;\n  const itemsLength = sections[sectionIdx].items.length;\n  if (itemIdx >= itemsLength) {\n    if (sectionIdx === sections.length - 1) {\n      itemIdx = itemInfo.itemIdx;\n    } else {\n      sectionIdx += 1;\n      itemIdx = 0;\n    }\n  }\n  return { itemIdx, sectionIdx };\n}\n\nfunction getPrevItemInfo<K>(itemInfo: ItemInfo, sections: LegendSection<K>[]) {\n  let { itemIdx, sectionIdx } = itemInfo;\n\n  if (sectionIdx == -1 && itemIdx == -1) {\n    (itemIdx = sections[sections.length - 1].items.length - 1), (sectionIdx = sections.length - 1);\n  }\n  itemIdx -= 1;\n\n  if (itemIdx < 0) {\n    if (sectionIdx === 0) {\n      itemIdx = 0;\n    } else {\n      itemIdx = sections[sectionIdx - 1].items.length - 1;\n      sectionIdx -= 1;\n    }\n  }\n  return { itemIdx, sectionIdx };\n}\n\n/**\n * Returns utils functions for navigation in simple sectional legend.\n * @param items\n * @returns\n */\nexport function getSectionalNavUtils<K>(sections: LegendSection<K>[]) {\n  return {\n    getItem: (itemInfo: ItemInfo) => {\n      return getItem(itemInfo, sections);\n    },\n    getDetailFromInfo: (itemInfo?: ItemInfo): InputDetail<K> => {\n      if (!itemInfo) {\n        return { itemId: undefined, sectionId: undefined };\n      }\n      const item = getItem(itemInfo, sections);\n      const sectionId = sections[itemInfo.sectionIdx].id;\n      return { itemId: item.id, sectionId: sectionId };\n    },\n    getPrevItemInfo: (itemInfo: ItemInfo) => {\n      return getPrevItemInfo(itemInfo, sections);\n    },\n    getNextItemInfo: (itemInfo: ItemInfo) => {\n      return getNextItemInfo(itemInfo, sections);\n    }\n  };\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { useRef } from 'preact/hooks';\nimport { BaseLegend } from './BaseLegend';\nimport { useEvents } from './useEvents';\nimport { LegendSection, SectionalLegendProps } from './Legend.type';\nimport { getSectionalNavUtils } from './SectionalLegendNavUtils';\nimport { mergeProps } from '../utils/UNSAFE_mergeProps';\nimport {\n  getDatatipText,\n  getAriaProps,\n  getRandomId,\n  getGridNums,\n  getLegendTextStyle\n} from './LegendUtils';\nimport { useLegendTooltip } from './useLegendTooltip';\nimport { LegendText } from './LegendText';\nimport { useItemFocus } from '../hooks/PRIVATE_useVisEvents';\nimport { useLegendLayout } from './useLegendLayout';\nimport { Flex } from '../UNSAFE_Flex';\nimport { styles } from './themes/LegendStyles.css';\nimport { useCssVars } from '../hooks/PRIVATE_useCssVars';\nimport { legendVars } from './LegendUtils';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { useTestId } from '../hooks/UNSAFE_useTestId';\n\n/**\n * A Sectional Legend allows grouping of legend items in sections with a specific title.\n */\nexport function SectionalLegend<K extends string | number>({\n  orientation = 'horizontal',\n  sectionTitleHAlign = 'start',\n  sections,\n  isReadOnly = true,\n  onItemAction,\n  onInput,\n  testId,\n  ...props\n}: SectionalLegendProps<K>) {\n  const testIdProps = useTestId(testId);\n  const rootRef = useRef<HTMLDivElement>(null);\n  const rootDimsRef = useRef<DOMRect>();\n  const { resolvedVars, cssContent } = useCssVars(legendVars);\n\n  const { getItem, getDetailFromInfo, getPrevItemInfo, getNextItemInfo } =\n    getSectionalNavUtils(sections);\n  const legendFontStylesObj = getLegendTextStyle(\n    {\n      fontStyle: props.textFontStyle,\n      fontSize: props.textFontSize?.toString(),\n      fontWeight: props.textFontWeight?.toString(),\n      fontFamily: props.textFontFamily\n    },\n    resolvedVars\n  );\n\n  const { textMeasureContent, layoutInfo } = useLegendLayout({\n    rootRef,\n    rootDimsRef,\n    resolvedVars,\n    sections,\n    orientation,\n    legendFontStylesObj,\n    symbolWidth: props.symbolWidth\n  });\n  const { focusedItemInfo, hoveredItemInfo, ...eventsProps } = useEvents(\n    !isReadOnly,\n    props.hiddenIds != null,\n    getDetailFromInfo,\n    getPrevItemInfo,\n    getNextItemInfo,\n    onItemAction,\n    onInput\n  );\n\n  const { focusedItemRef } = useItemFocus(focusedItemInfo);\n  const text = getDatatipText(sections, getItem, focusedItemInfo, hoveredItemInfo);\n  const { tooltipContent, tooltipProps } = useLegendTooltip({\n    text,\n    rootDimsRef,\n    focusedItemInfo,\n    focusedItemRef\n  });\n  const ariaProps = getAriaProps(isReadOnly, props['aria-label'], props.hiddenIds);\n  const mergedProps = mergeProps(eventsProps, tooltipProps);\n  const titleStyle = {\n    fontFamily: props.sectionTitleFontFamily,\n    fontSize: props.sectionTitleFontSize,\n    color: props.sectionTitleColor,\n    fontStyle: props.sectionTitleFontStyle,\n    fontWeight: props.sectionTitleFontWeight,\n    textDecoration: props.sectionTitleTextDecoration\n  };\n  const { sectionalLegendBaseStyles, renderedLegendStyle, preRenderedLegendStyle } = styles;\n  const isHoriz = orientation === 'horizontal';\n  const canRender = orientation === 'vertical' || !!layoutInfo;\n  return (\n    <div\n      ref={rootRef}\n      tabIndex={isReadOnly ? undefined : 0}\n      role=\"application\"\n      class={classNames([\n        sectionalLegendBaseStyles,\n        canRender ? renderedLegendStyle : preRenderedLegendStyle\n      ])}\n      {...testIdProps}\n      {...ariaProps}\n      {...mergedProps}>\n      {canRender ? (\n        <Flex direction={isHoriz ? 'row' : 'column'} wrap={'wrap'} gap={'4x'}>\n          {sections.map((section: LegendSection<K>, index: number) => {\n            const labelledById = !isReadOnly ? getRandomId() : '';\n            const isWrappedSection = layoutInfo ? layoutInfo.isWrapped : false;\n            const flexDirection = !isHoriz || isWrappedSection ? 'column' : 'row';\n            const alignItems = !isHoriz || isWrappedSection ? 'start' : 'center';\n            const { itemsPerCol, itemsPerRow } = getGridNums(section.items.length, layoutInfo);\n            return (\n              <Flex\n                align={alignItems}\n                direction={flexDirection}\n                maxWidth={'100%'}\n                justify={'start'}\n                wrap=\"wrap\">\n                <LegendText\n                  text={section.title}\n                  {...titleStyle}\n                  type=\"title\"\n                  id={labelledById}\n                  align={sectionTitleHAlign}\n                />\n                <BaseLegend\n                  {...props}\n                  focusedItemRef={focusedItemRef}\n                  labelledBy={labelledById}\n                  sectionIdx={index}\n                  items={section.items}\n                  orientation={orientation}\n                  itemsPerRow={itemsPerRow}\n                  itemsPerCol={itemsPerCol}\n                  itemWidth={layoutInfo?.isWrapped ? layoutInfo?.maxItemWidth : undefined}\n                  isReadOnly={isReadOnly}\n                  focusedItemInfo={focusedItemInfo}\n                  hoveredItemInfo={hoveredItemInfo}\n                  activeId={eventsProps['aria-activedescendant']}\n                />\n              </Flex>\n            );\n          })}\n        </Flex>\n      ) : null}\n      {tooltipContent}\n      {textMeasureContent}\n      {cssContent}\n    </div>\n  );\n}\n"],"names":["getItem","itemInfo","sections","sectionIdx","itemIdx","itemsLength","length","items","getSectionalNavUtils","getDetailFromInfo","itemId","undefined","sectionId","item","id","getPrevItemInfo","getNextItemInfo","orientation","sectionTitleHAlign","isReadOnly","onItemAction","onInput","testId","props","testIdProps","useTestId","rootRef","useRef","rootDimsRef","resolvedVars","cssContent","useCssVars","legendVars","legendFontStylesObj","getLegendTextStyle","fontStyle","textFontStyle","fontSize","textFontSize","toString","fontWeight","textFontWeight","fontFamily","textFontFamily","textMeasureContent","layoutInfo","useLegendLayout","symbolWidth","focusedItemInfo","hoveredItemInfo","eventsProps","useEvents","hiddenIds","focusedItemRef","useItemFocus","text","getDatatipText","tooltipContent","tooltipProps","useLegendTooltip","ariaProps","getAriaProps","mergedProps","mergeProps","titleStyle","sectionTitleFontFamily","sectionTitleFontSize","color","sectionTitleColor","sectionTitleFontStyle","sectionTitleFontWeight","textDecoration","sectionTitleTextDecoration","sectionalLegendBaseStyles","renderedLegendStyle","preRenderedLegendStyle","styles","isHoriz","canRender","_jsxs","jsxs","ref","tabIndex","role","class","classNames","children","_jsx","Flex","direction","wrap","gap","map","section","index","labelledById","getRandomId","isWrappedSection","isWrapped","flexDirection","alignItems","itemsPerCol","itemsPerRow","getGridNums","align","maxWidth","justify","jsx","LegendText","title","type","BaseLegend","labelledBy","itemWidth","maxItemWidth","activeId"],"mappings":"kVAUA,SAASA,EAAWC,EAAoBC,GACtC,MAAMC,WAAEA,EAAUC,QAAEA,GAAYH,EAEhC,IAAmB,GAAfE,IAAgC,GAAZC,EAAe,CACrC,MAAMC,EAAcH,EAASA,EAASI,OAAS,GAAGC,MAAMD,OACxD,OAAOJ,EAASA,EAASI,OAAS,GAAGC,MAAMF,EAAc,EAC1D,CAED,OAAOH,EAASC,GAAYI,MAAMH,EACpC,CAiDM,SAAUI,EAAwBN,GACtC,MAAO,CACLF,QAAUC,GACDD,EAAQC,EAAUC,GAE3BO,kBAAoBR,IAClB,IAAKA,EACH,MAAO,CAAES,YAAQC,EAAWC,eAAWD,GAEzC,MAAME,EAAOb,EAAQC,EAAUC,GACzBU,EAAYV,EAASD,EAASE,YAAYW,GAChD,MAAO,CAAEJ,OAAQG,EAAKC,GAAIF,UAAWA,EAAW,EAElDG,gBAAkBd,GArCtB,SAA4BA,EAAoBC,GAC9C,IAAIE,QAAEA,EAAOD,WAAEA,GAAeF,EAe9B,OAbmB,GAAfE,IAAgC,GAAZC,IACrBA,EAAUF,EAASA,EAASI,OAAS,GAAGC,MAAMD,OAAS,EAAKH,EAAaD,EAASI,OAAS,GAE9FF,GAAW,EAEPA,EAAU,IACO,IAAfD,EACFC,EAAU,GAEVA,EAAUF,EAASC,EAAa,GAAGI,MAAMD,OAAS,EAClDH,GAAc,IAGX,CAAEC,UAASD,aACpB,CAqBaY,CAAgBd,EAAUC,GAEnCc,gBAAkBf,GA/DtB,SAA4BA,EAAoBC,GAC9C,IAAIE,QAAEA,EAAOD,WAAEA,GAAeF,EAE9B,OAAmB,GAAfE,IAAgC,GAAZC,EACf,CACLA,QAASF,EAASA,EAASI,OAAS,GAAGC,MAAMD,OAAS,EACtDH,WAAYD,EAASI,OAAS,IAIlCF,GAAW,EAEPA,GADgBF,EAASC,GAAYI,MAAMD,SAEzCH,IAAeD,EAASI,OAAS,EACnCF,EAAUH,EAASG,SAEnBD,GAAc,EACdC,EAAU,IAGP,CAAEA,UAASD,cACpB,CA2Caa,CAAgBf,EAAUC,GAGvC,mBCrDM,UAAqDe,YACzDA,EAAc,aAAYC,mBAC1BA,EAAqB,QAAOhB,SAC5BA,EAAQiB,WACRA,GAAa,EAAIC,aACjBA,EAAYC,QACZA,EAAOC,OACPA,KACGC,IAEH,MAAMC,EAAcC,YAAUH,GACxBI,EAAUC,SAAuB,MACjCC,EAAcD,EAAAA,UACdE,aAAEA,EAAYC,WAAEA,GAAeC,EAAUA,WAACC,EAAUA,aAEpDhC,QAAEA,EAAOS,kBAAEA,EAAiBM,gBAAEA,EAAeC,gBAAEA,GACnDR,EAAqBN,GACjB+B,EAAsBC,EAAAA,mBAC1B,CACEC,UAAWZ,EAAMa,cACjBC,SAAUd,EAAMe,cAAcC,WAC9BC,WAAYjB,EAAMkB,gBAAgBF,WAClCG,WAAYnB,EAAMoB,gBAEpBd,IAGIe,mBAAEA,EAAkBC,WAAEA,GAAeC,kBAAgB,CACzDpB,UACAE,cACAC,eACA3B,WACAe,cACAgB,sBACAc,YAAaxB,EAAMwB,eAEfC,gBAAEA,EAAeC,gBAAEA,KAAoBC,GAAgBC,EAASA,WACnEhC,EACkB,MAAnBI,EAAM6B,UACN3C,EACAM,EACAC,EACAI,EACAC,IAGIgC,eAAEA,GAAmBC,EAAYA,aAACN,GAClCO,EAAOC,EAAAA,eAAetD,EAAUF,EAASgD,EAAiBC,IAC1DQ,eAAEA,EAAcC,aAAEA,GAAiBC,mBAAiB,CACxDJ,OACA3B,cACAoB,kBACAK,mBAEIO,EAAYC,EAAYA,aAAC1C,EAAYI,EAAM,cAAeA,EAAM6B,WAChEU,EAAcC,EAAAA,WAAWb,EAAaQ,GACtCM,EAAa,CACjBtB,WAAYnB,EAAM0C,uBAClB5B,SAAUd,EAAM2C,qBAChBC,MAAO5C,EAAM6C,kBACbjC,UAAWZ,EAAM8C,sBACjB7B,WAAYjB,EAAM+C,uBAClBC,eAAgBhD,EAAMiD,6BAElBC,0BAAEA,EAAyBC,oBAAEA,EAAmBC,uBAAEA,GAA2BC,EAAAA,OAC7EC,EAA0B,eAAhB5D,EACV6D,EAA4B,aAAhB7D,KAAgC4B,EAClD,OACEkC,EACEC,KAAA,MAAA,CAAAC,IAAKvD,EACLwD,SAAU/D,OAAaR,EAAY,EACnCwE,KAAK,cACLC,MAAOC,EAAAA,WAAW,CAChBZ,EACAK,EAAYJ,EAAsBC,OAEhCnD,KACAoC,KACAE,EAAWwB,SAAA,CACdR,EACCS,MAACC,EAAAA,KAAK,CAAAC,UAAWZ,EAAU,MAAQ,SAAUa,KAAM,OAAQC,IAAK,cAC7DzF,EAAS0F,KAAI,CAACC,EAA2BC,KACxC,MAAMC,EAAgB5E,EAA6B,GAAhB6E,EAAWA,cACxCC,IAAmBpD,GAAaA,EAAWqD,UAC3CC,GAAiBtB,GAAWoB,EAAmB,SAAW,MAC1DG,GAAcvB,GAAWoB,EAAmB,QAAU,UACtDI,YAAEA,EAAWC,YAAEA,GAAgBC,EAAAA,YAAYV,EAAQtF,MAAMD,OAAQuC,GACvE,OACEkC,EAAAA,KAACS,EAAAA,KACC,CAAAgB,MAAOJ,EACPX,UAAWU,EACXM,SAAU,OACVC,QAAS,QACThB,KAAK,OACLJ,SAAA,CAAAC,EAAAoB,IAACC,EAAUA,WAAA,CACTrD,KAAMsC,EAAQgB,SACV7C,EACJ8C,KAAK,QACLhG,GAAIiF,EACJS,MAAOtF,IAETqE,EAAAA,IAACwB,EAAAA,WACK,IAAAxF,EACJ8B,eAAgBA,EAChB2D,WAAYjB,EACZ5F,WAAY2F,EACZvF,MAAOsF,EAAQtF,MACfU,YAAaA,EACbqF,YAAaA,EACbD,YAAaA,EACbY,UAAWpE,GAAYqD,UAAYrD,GAAYqE,kBAAevG,EAC9DQ,WAAYA,EACZ6B,gBAAiBA,EACjBC,gBAAiBA,EACjBkE,SAAUjE,EAAY,6BAG1B,MAGJ,KACHO,EACAb,EACAd,IAGP"}