{"version":3,"file":"useSelectDrill-d240d5b5.js","sources":["../../src/hooks/PRIVATE_useChartEvents/useDatatipAndCursor.ts","../../src/hooks/PRIVATE_useChartEvents/useSelectDrill.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { mergeProps } from '../../utils/UNSAFE_mergeProps';\nimport { useChartDataCursor } from '../UNSAFE_useChartDataCursor';\nimport { useChartDatatip } from '../PRIVATE_useChartDatatip';\nimport { ChartItem } from '../../UNSAFE_Chart/chart.types';\n\ntype DataCursorProps = Parameters<typeof useChartDataCursor>[0];\ntype DatatipProps<K extends string | number, D extends ChartItem<K>> = Parameters<\n  typeof useChartDatatip<K, D>\n>[0];\n\nexport function useChartDatatipAndCursor<K extends string | number, D extends ChartItem<K>>({\n  series,\n  groups,\n  width,\n  height,\n  findNearest,\n  onDataCursorPositionChange,\n  isDataCursorEnabled,\n  dataCursorPosition,\n  dataCursorStyle,\n  hoveredItemInfo,\n  focusedItemInfo,\n  getDataItem,\n  getDataItemPos,\n  datatip,\n  valueFormats,\n  isHoriz,\n  xScale,\n  yScale,\n  plotAreaSpace\n}: DataCursorProps & DatatipProps<K, D>) {\n  const { datatipContent, datatipProps } = useChartDatatip<K, D>({\n    series,\n    groups,\n    width,\n    height,\n    isDataCursorEnabled,\n    dataCursorPosition,\n    hoveredItemInfo,\n    getDataItem,\n    getDataItemPos,\n    focusedItemInfo,\n    datatip,\n    valueFormats,\n    isHoriz,\n    xScale,\n    findNearest\n  });\n\n  const { dataCursorContent, dataCursorProps } = useChartDataCursor({\n    findNearest,\n    dataCursorPosition,\n    onDataCursorPositionChange,\n    isDataCursorEnabled,\n    dataCursorStyle,\n    isHoriz,\n    focusedItemInfo,\n    plotAreaSpace,\n    yScale,\n    xScale,\n    getDataItemPos\n  });\n\n  return {\n    datatipContent,\n    dataCursorContent,\n    datatipProps: mergeProps(dataCursorProps, datatipProps)\n  };\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { getInfo } from '../../utils/UNSAFE_visUtils';\nimport { useChartDrill } from '../PRIVATE_useChartDrill';\nimport { useSelection } from '../PRIVATE_useVisSelection/useSelection';\nimport { mergeProps } from '../../utils/UNSAFE_mergeProps';\n\ntype DrillProps = Parameters<typeof useChartDrill>[0];\n\ntype SelectionProps = {\n  selection: (string | number)[];\n  onChange?: (detail: { ids: (string | number)[] }) => void;\n};\n\nexport function useSelectDrill({\n  selectionMode,\n  selection,\n  onChange,\n  rootRef,\n  drilling,\n  onItemDrill,\n  onGroupDrill,\n  focusedGroupInfo,\n  focusedItemInfo,\n  groups,\n  getDataItem\n}: DrillProps & SelectionProps) {\n  const idExtracter = (event: Event) => {\n    const isItemFocused = focusedItemInfo.isCurrent;\n    const info =\n      isItemFocused && event.type === 'keyup' ? focusedItemInfo : getInfo(rootRef, event);\n    return info && info.seriesIndex != null && info.groupIndex != null\n      ? getDataItem(info.seriesIndex, info.groupIndex)?.id\n      : undefined;\n  };\n\n  const selectionProps = useSelection<string | number>({\n    idExtracter,\n    isDrillEnabled: drilling === 'on',\n    selection,\n    selectionMode,\n    onChange\n  });\n\n  const drillProps = useChartDrill({\n    rootRef,\n    selectionMode,\n    drilling,\n    focusedItemInfo,\n    focusedGroupInfo,\n    groups,\n    getDataItem,\n    onItemDrill,\n    onGroupDrill\n  });\n\n  return mergeProps(selectionProps, drillProps);\n}\n"],"names":["series","groups","width","height","findNearest","onDataCursorPositionChange","isDataCursorEnabled","dataCursorPosition","dataCursorStyle","hoveredItemInfo","focusedItemInfo","getDataItem","getDataItemPos","datatip","valueFormats","isHoriz","xScale","yScale","plotAreaSpace","datatipContent","datatipProps","useChartDatatip","dataCursorContent","dataCursorProps","useChartDataCursor","mergeProps","selectionMode","selection","onChange","rootRef","drilling","onItemDrill","onGroupDrill","focusedGroupInfo","selectionProps","useSelection","idExtracter","event","info","isCurrent","type","getInfo","seriesIndex","groupIndex","id","undefined","isDrillEnabled","drillProps","useChartDrill"],"mappings":"yRAkB4FA,OAC1FA,EAAMC,OACNA,EAAMC,MACNA,EAAKC,OACLA,EAAMC,YACNA,EAAWC,2BACXA,EAA0BC,oBAC1BA,EAAmBC,mBACnBA,EAAkBC,gBAClBA,EAAeC,gBACfA,EAAeC,gBACfA,EAAeC,YACfA,EAAWC,eACXA,EAAcC,QACdA,EAAOC,aACPA,EAAYC,QACZA,EAAOC,OACPA,EAAMC,OACNA,EAAMC,cACNA,IAEA,MAAMC,eAAEA,EAAcC,aAAEA,GAAiBC,kBAAsB,CAC7DrB,SACAC,SACAC,QACAC,SACAG,sBACAC,qBACAE,kBACAE,cACAC,iBACAF,kBACAG,UACAC,eACAC,UACAC,SACAZ,iBAGIkB,kBAAEA,EAAiBC,gBAAEA,GAAoBC,qBAAmB,CAChEpB,cACAG,qBACAF,6BACAC,sBACAE,kBACAO,UACAL,kBACAQ,gBACAD,SACAD,SACAJ,mBAGF,MAAO,CACLO,iBACAG,oBACAF,aAAcK,EAAAA,WAAWF,EAAiBH,GAE9C,mBCxDM,UAAyBM,cAC7BA,EAAaC,UACbA,EAASC,SACTA,EAAQC,QACRA,EAAOC,SACPA,EAAQC,YACRA,EAAWC,aACXA,EAAYC,iBACZA,EAAgBvB,gBAChBA,EAAeT,OACfA,EAAMU,YACNA,IAEA,MASMuB,EAAiBC,EAAAA,aAA8B,CACnDC,YAVmBC,IACnB,MACMC,EADgB5B,EAAgB6B,WAEJ,UAAfF,EAAMG,KAAmB9B,EAAkB+B,EAAOA,QAACZ,EAASQ,GAC/E,OAAOC,GAA4B,MAApBA,EAAKI,aAA0C,MAAnBJ,EAAKK,WAC5ChC,EAAY2B,EAAKI,YAAaJ,EAAKK,aAAaC,QAChDC,CAAS,EAKbC,eAA6B,OAAbhB,EAChBH,YACAD,gBACAE,aAGImB,EAAaC,EAAAA,cAAc,CAC/BnB,UACAH,gBACAI,WACApB,kBACAuB,mBACAhC,SACAU,cACAoB,cACAC,iBAGF,OAAOP,EAAUA,WAACS,EAAgBa,EACpC"}