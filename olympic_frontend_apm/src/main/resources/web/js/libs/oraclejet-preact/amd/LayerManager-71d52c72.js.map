{"version":3,"file":"LayerManager-71d52c72.js","sources":["../../src/UNSAFE_Layer/LayerManager.tsx"],"sourcesContent":["/**\n * The LayerManager wraps your application and creates two adjacent divs for\n * rendering your application and housing Layers.\n */\nimport { ComponentChildren } from 'preact';\nimport { useCallback, useState } from 'preact/compat';\nimport { LayerContext, LayerContextProps, LayerPriority } from './LayerContext';\nimport LayerHost from './LayerHost';\nimport TopLayerHost from './TopLayerHost';\n\ntype LayerManagerProps = {\n  children?: ComponentChildren;\n};\n\nexport function LayerManager({ children }: LayerManagerProps) {\n  const [defaultHost, setDefaultHost] = useState<Element>();\n  const [defaultTopHost, setDefaultTopHost] = useState<Element>();\n  //const context = useContext(LayerContext);\n  const defaultHostRef = useCallback((el: Element | null) => {\n    // ref callbacks fire after the component has been unnmounted so we do not\n    // want to set state in this use-case\n    if (el !== null) {\n      setDefaultHost(el);\n    }\n  }, []);\n\n  const defaultTopHostRef = useCallback((el: Element | null) => {\n    // ref callbacks fire after the component has been unnmounted so we do not\n    // want to set state in this use-case\n    if (el !== null) {\n      setDefaultTopHost(el);\n    }\n  }, []);\n\n  return (\n    <LayerContext.Consumer>\n      {(value: LayerContextProps) => {\n        let defaultHostContext = {};\n        if (defaultHost && defaultTopHost) {\n          defaultHostContext = {\n            priority: undefined,\n            getHost: (priority: LayerPriority) => {\n              return priority === 'top' ? defaultTopHost : defaultHost;\n            }\n          };\n        }\n        const layerContext = value.getHost ? value : defaultHostContext;\n        return (\n          <LayerContext.Provider value={layerContext}>\n            {children}\n            {!value.getHost && <LayerHost ref={defaultHostRef} />}\n            {!value.getHost && <TopLayerHost ref={defaultTopHostRef} />}\n          </LayerContext.Provider>\n        );\n      }}\n    </LayerContext.Consumer>\n  );\n}\n"],"names":["children","defaultHost","setDefaultHost","useState","defaultTopHost","setDefaultTopHost","defaultHostRef","useCallback","el","defaultTopHostRef","_jsx","LayerContext","Consumer","value","defaultHostContext","priority","undefined","getHost","layerContext","_jsxs","Provider","LayerHost","ref","TopLayerHost"],"mappings":"iIAcgB,UAAaA,SAAEA,IAC7B,MAAOC,EAAaC,GAAkBC,EAAQA,YACvCC,EAAgBC,GAAqBF,EAAQA,WAE9CG,EAAiBC,eAAaC,IAGvB,OAAPA,GACFN,EAAeM,EAChB,GACA,IAEGC,EAAoBF,eAAaC,IAG1B,OAAPA,GACFH,EAAkBG,EACnB,GACA,IAEH,OACEE,EAAAA,IAACC,EAAAA,aAAaC,SACX,CAAAZ,SAACa,IACA,IAAIC,EAAqB,CAAA,EACrBb,GAAeG,IACjBU,EAAqB,CACnBC,cAAUC,EACVC,QAAUF,GACY,QAAbA,EAAqBX,EAAiBH,IAInD,MAAMiB,EAAeL,EAAMI,QAAUJ,EAAQC,EAC7C,OACEK,OAACR,EAAAA,aAAaS,UAASP,MAAOK,EAAYlB,SAAA,CACvCA,GACCa,EAAMI,SAAWP,EAAAA,IAACW,EAAAA,UAAU,CAAAC,IAAKhB,KACjCO,EAAMI,SAAWP,EAAAA,IAACa,EAAYA,cAACD,IAAKb,MAExC,GAIV"}