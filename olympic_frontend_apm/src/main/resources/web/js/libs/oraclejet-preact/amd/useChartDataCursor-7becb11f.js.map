{"version":3,"file":"useChartDataCursor-7becb11f.js","sources":["../../src/hooks/UNSAFE_useChartDataCursor/useChartDataCursor.tsx","../../src/hooks/UNSAFE_useChartDataCursor/util.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { Dimension } from '../../UNSAFE_Axis/axis.types';\nimport {\n  DataCursorPosition,\n  DataCursorStyle,\n  onDataCursorPositionChange\n} from './DataCursor.types';\nimport { getDataCursorCoords } from './util';\nimport { styles } from './themes/DataCursorStyles.css';\nimport { Scale } from '../../UNSAFE_Chart';\nimport { Info } from '../../UNSAFE_Chart';\n\ntype Props = {\n  findNearest: (x: number, y: number) => any;\n  dataCursorPosition?: DataCursorPosition;\n  isDataCursorEnabled?: boolean;\n  isHoriz: boolean;\n  plotAreaSpace: Dimension;\n  yScale: Scale;\n  xScale: Scale;\n  onDataCursorPositionChange?: onDataCursorPositionChange;\n  dataCursorStyle?: DataCursorStyle;\n  focusedItemInfo: Info;\n  getDataItemPos: (seriesIndex: number, groupIndex: number) => Dimension | undefined;\n};\n\nexport function useChartDataCursor({\n  findNearest,\n  dataCursorPosition,\n  onDataCursorPositionChange,\n  isDataCursorEnabled,\n  isHoriz,\n  plotAreaSpace,\n  yScale,\n  xScale,\n  dataCursorStyle,\n  focusedItemInfo,\n  getDataItemPos\n}: Props) {\n  let dataCursorContent = null;\n  const x = dataCursorPosition?.x;\n  const isSnap = dataCursorStyle?.behavior === 'snap';\n\n  const updateDataCursor = () => {\n    const { seriesIndex, groupIndex } = focusedItemInfo;\n    const elemBounds = getDataItemPos(seriesIndex!, groupIndex!);\n    if (!elemBounds) {\n      return;\n    }\n    const px = elemBounds?.x + elemBounds.width / 2;\n    const py = elemBounds?.y + elemBounds.height / 2;\n\n    let X = xScale.invert(isHoriz ? py : px);\n    let Y = yScale.invert(isHoriz ? px : py);\n\n    const neareastItemInfo = findNearest(X, Y);\n    if (isSnap) {\n      X = xScale.invert(neareastItemInfo.xCoord);\n      Y = yScale.invert(neareastItemInfo.yCoord);\n    }\n    onDataCursorPositionChange?.({ x: X, y: Y });\n  };\n\n  const onPointerMove = (event: PointerEvent) => {\n    const px = event.offsetX;\n    const py = event.offsetY;\n    if (\n      px < plotAreaSpace.x ||\n      py < plotAreaSpace.y ||\n      px > plotAreaSpace.x + plotAreaSpace.width ||\n      py > plotAreaSpace.y + plotAreaSpace.height\n    ) {\n      dataCursorContent = null;\n      onDataCursorPositionChange?.({ x: undefined, y: undefined });\n      return;\n    }\n\n    let X = xScale.invert(isHoriz ? py : px);\n    let Y = yScale.invert(isHoriz ? px : py);\n\n    const neareastItemInfo = findNearest(X, Y);\n    if (isSnap) {\n      X = xScale.invert(neareastItemInfo.xCoord);\n      Y = yScale.invert(neareastItemInfo.yCoord);\n    }\n    onDataCursorPositionChange?.({ x: X, y: Y });\n  };\n\n  const onPointerLeave = () => {\n    onDataCursorPositionChange?.({ x: undefined, y: undefined });\n  };\n\n  const onKeyDown = (event: KeyboardEvent) => {\n    if (event.key === 'Tab') {\n      onDataCursorPositionChange?.({ x: undefined, y: undefined });\n      return;\n    }\n    updateDataCursor();\n  };\n\n  const onKeyUp = (event: KeyboardEvent) => {\n    if (event.key === 'Tab' && focusedItemInfo.isCurrent) {\n      return;\n    }\n    updateDataCursor();\n  };\n\n  if (x != undefined && isDataCursorEnabled) {\n    const { mainLineProps, contrastLineProps } = getDataCursorCoords(\n      xScale,\n      x,\n      plotAreaSpace,\n      isHoriz,\n      dataCursorStyle\n    );\n\n    dataCursorContent = (\n      <g class={styles.dataCursor}>\n        <line {...mainLineProps} class={styles.dataCursorLine} />\n        <line {...contrastLineProps} class={styles.contrastLine} />\n      </g>\n    );\n  }\n\n  return {\n    dataCursorContent,\n    dataCursorProps: isDataCursorEnabled\n      ? {\n          onPointerMove,\n          onPointerLeave,\n          onKeyDown,\n          onKeyUp\n        }\n      : {}\n  };\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { Scale } from '../../UNSAFE_Chart';\nimport { DataCursorStyle } from './DataCursor.types';\n\nexport function getDataCursorCoords(\n  xScale: Scale,\n  x: number,\n  plotAreaSpace: { x: number; y: number; height: number; width: number },\n  isHoriz: boolean,\n  dataCursorStyle?: DataCursorStyle\n) {\n  const lineColor = dataCursorStyle?.lineColor;\n  const lineStyle = dataCursorStyle?.lineStyle;\n  const y1 = isHoriz ? xScale.transform(x) : plotAreaSpace.y + plotAreaSpace.height;\n  const x1 = isHoriz ? plotAreaSpace.x : xScale.transform(x);\n\n  const y2 = isHoriz ? xScale.transform(x) : plotAreaSpace.y;\n  const x2 = isHoriz ? plotAreaSpace.x + plotAreaSpace.width : xScale.transform(x);\n\n  const lineWidth = dataCursorStyle?.lineWidth || 1;\n  return {\n    mainLineProps: {\n      x1,\n      y1,\n      x2,\n      y2,\n      style: {\n        stroke: lineColor,\n        strokeDashArray: lineStyle === 'dotted' ? 3 : lineStyle === 'dashed' ? 6 : undefined,\n        strokeWidth: lineWidth\n      }\n    },\n    contrastLineProps: {\n      x1: isHoriz ? x1 : x1 + lineWidth,\n      y1: isHoriz ? y1 + lineWidth : y1,\n      x2: isHoriz ? x2 : x2 + lineWidth,\n      y2: isHoriz ? y2 + lineWidth : y2\n    }\n  };\n}\n"],"names":["findNearest","dataCursorPosition","onDataCursorPositionChange","isDataCursorEnabled","isHoriz","plotAreaSpace","yScale","xScale","dataCursorStyle","focusedItemInfo","getDataItemPos","dataCursorContent","x","isSnap","behavior","updateDataCursor","seriesIndex","groupIndex","elemBounds","px","width","py","y","height","X","invert","Y","neareastItemInfo","xCoord","yCoord","undefined","mainLineProps","contrastLineProps","lineColor","lineStyle","y1","transform","x1","y2","x2","lineWidth","style","stroke","strokeDashArray","strokeWidth","getDataCursorCoords","_jsxs","jsxs","class","styles","dataCursor","children","_jsx","jsx","dataCursorLine","contrastLine","dataCursorProps","onPointerMove","event","offsetX","offsetY","onPointerLeave","onKeyDown","key","onKeyUp","isCurrent"],"mappings":"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"}