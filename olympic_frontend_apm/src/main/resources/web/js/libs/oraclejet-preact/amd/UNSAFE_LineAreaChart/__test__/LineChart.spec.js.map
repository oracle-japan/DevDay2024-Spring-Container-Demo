{"version":3,"file":"LineChart.spec.js","sources":["../../../../src/UNSAFE_LineAreaChart/__test__/LineChart.spec.tsx"],"sourcesContent":["import {\n  getByLabelText,\n  queryAllByAttribute,\n  queryByAttribute,\n  render,\n  waitFor\n} from '@testing-library/preact';\nimport { expect } from 'chai';\nimport { LineAreaChart } from '../LineAreaChart';\nimport { setupUseTextDimensionsDependenciesMock } from '../../../test/mocks/mockUseTextDimensionsDependencies';\nimport { ComponentProps } from 'preact/compat';\nimport { matchTranslationBundle } from '../../utils/UNSAFE_matchTranslationBundle';\nimport { RootEnvironment, RootEnvironmentProvider } from '../../UNSAFE_Environment';\nimport userEvent from '@testing-library/user-event';\n\ntype LineAreaChartProps = ComponentProps<typeof LineAreaChart>;\n\nconst queryById = queryByAttribute.bind(null, 'id');\n\nfunction queryAllBy(attribute: string) {\n  return queryAllByAttribute.bind(null, attribute);\n}\n\nconst series = [\n  {\n    name: 'Series 1',\n    id: 'Series 1',\n    items: [\n      {\n        id: 1,\n        value: 2,\n        accessibleLabel: 'item one'\n      },\n      {\n        id: 2,\n        value: 2,\n        accessibleLabel: 'item two'\n      }\n    ]\n  },\n  {\n    name: 'Series 2',\n    id: 'Series 2',\n    items: [\n      {\n        id: 3,\n        value: 3,\n        accessibleLabel: 'item three'\n      },\n      {\n        id: 4,\n        value: 4,\n        accessibleLabel: 'item four'\n      }\n    ]\n  }\n];\n\nconst defaultProps = {\n  series,\n  width: '400px',\n  groups: [{ id: 'Group A' }, { id: 'Group B' }],\n  getDataItem: (i: number, j: number) => series[i].items[j]\n};\n\nconst setupLineAreaChart = async (options?: Partial<LineAreaChartProps>) => {\n  const locale = matchTranslationBundle(['en'], new Set(['en-US', 'en']));\n  const { default: translations } = await import(`../../resources/nls/${locale}/bundle.ts`);\n  const env: Partial<RootEnvironment> = {\n    translations: { '@oracle/oraclejet-preact': translations }\n  };\n  const chartProps = { ...defaultProps, ...options };\n  const chart = <LineAreaChart {...chartProps} />;\n  return render(<RootEnvironmentProvider environment={env}>{chart}</RootEnvironmentProvider>);\n};\n\nexport function checkActiveItemGroupSeries(\n  chart: HTMLElement,\n  seriesIndex: string,\n  groupIndex: string\n) {\n  const activeDescendantId = chart.getAttribute('aria-activedescendant');\n  const activeElement = queryById(chart, activeDescendantId!);\n  expect(activeElement).not.null;\n  expect(activeElement?.getAttribute('data-oj-series-index')).to.equal(seriesIndex);\n  expect(activeElement?.getAttribute('data-oj-group-index')).to.equal(groupIndex);\n}\n\ndescribe('Test LineAreaChart component', () => {\n  beforeEach(() => {\n    setupUseTextDimensionsDependenciesMock(window);\n  });\n  it('renders chart with correct aria properties', async function () {\n    const content = await setupLineAreaChart({\n      'aria-labelledby': 'chartAriaLabelledBy',\n      'aria-label': 'chartAriaLabel'\n    });\n    // TODO: aria described by is overriden by datatip aria-decribedby currently\n    // add aria describedby after fixing it.\n    const chart = content.getByRole('application');\n    expect(chart).not.null;\n    expect(chart.getAttribute('aria-labelledby')).to.equal('chartAriaLabelledBy');\n    expect(chart.getAttribute('aria-label')).to.equal('chartAriaLabel');\n    expect(chart.getAttribute('tabIndex')).to.equal('0');\n  });\n\n  it('renders items with correct aria properties', async function () {\n    const content = await setupLineAreaChart();\n    const chart = content.getByRole('application');\n    // aria label is populated only after interaction.\n    await userEvent.tab();\n    const item = getByLabelText(chart, 'item one');\n    expect(item.getAttribute('data-oj-group-index')).to.equal('0');\n    expect(item.getAttribute('data-oj-series-index')).to.equal('0');\n    await userEvent.keyboard('[ARROWRIGHT]');\n    const selected = getByLabelText(chart, 'item two');\n    expect(selected.getAttribute('data-oj-group-index')).to.equal('1');\n    expect(selected.getAttribute('data-oj-series-index')).to.equal('0');\n  });\n\n  it('navigates to correct items', async function () {\n    const content = await setupLineAreaChart();\n    const chart = content.getByRole('application');\n    await userEvent.tab();\n    checkActiveItemGroupSeries(chart, '0', '0');\n    await userEvent.keyboard('[ARROWRIGHT]');\n    checkActiveItemGroupSeries(chart, '0', '1');\n    await userEvent.keyboard('[ARROWUP]');\n    checkActiveItemGroupSeries(chart, '1', '1');\n    await userEvent.keyboard('[ARROWLEFT]');\n    checkActiveItemGroupSeries(chart, '1', '0');\n  });\n\n  it('renders the selected items', async function () {\n    if (typeof jest == 'undefined') {\n      const content = await setupLineAreaChart({\n        selectionMode: 'multiple',\n        selectedIds: [1, 2]\n      });\n      const chart = content.getByRole('application');\n      const queryAllByDataObject = queryAllBy('data-oj-object');\n      const markers = queryAllByDataObject(chart, 'item');\n      expect(markers.length).to.equal(4);\n      const selectedItems = markers.filter(\n        (item) => item.getAttribute('data-oj-series-index') === '0'\n      );\n      expect(selectedItems.length).to.equal(2);\n      selectedItems.forEach((item) => {\n        const itemStyle = getComputedStyle(item);\n        expect(itemStyle.getPropertyValue('stroke')).to.equal('rgb(92, 86, 81)');\n        expect(itemStyle.getPropertyValue('stroke-width')).to.equal('1px');\n        expect(itemStyle.getPropertyValue('fill')).to.equal('rgb(255, 255, 255)');\n      });\n      const unselectedItems = markers.filter(\n        (item) => item.getAttribute('data-oj-series-index') != '0'\n      );\n      expect(unselectedItems.length).to.equal(2);\n      unselectedItems.forEach((item) => {\n        const itemStyle = getComputedStyle(item);\n        expect(itemStyle.getPropertyValue('stroke')).to.equal('rgba(255, 255, 255, 0)');\n        expect(itemStyle.getPropertyValue('stroke-width')).to.equal('1px');\n        expect(itemStyle.getPropertyValue('fill')).to.equal('rgba(255, 255, 255, 0)');\n      });\n    }\n  });\n\n  it('does not render the hidden ids', async function () {\n    const content = await setupLineAreaChart({\n      hiddenIds: [1, 2]\n    });\n    const chart = content.getByRole('application');\n    await userEvent.tab();\n    const queryAllByDataObject = queryAllBy('data-oj-object');\n    const markers = queryAllByDataObject(chart, 'item');\n    expect(markers.length).to.equal(2);\n    markers.forEach((item) => {\n      expect(item.getAttribute('data-oj-series-index')).not.equal('0');\n    });\n  });\n\n  it('triggers the item input on keyboard nav', async function () {\n    let sIndex: number | undefined;\n    let gIndex: number | undefined;\n    setupLineAreaChart({\n      onItemInput: ({ seriesIndex, groupIndex }) => {\n        sIndex = seriesIndex;\n        gIndex = groupIndex;\n      }\n    });\n    await userEvent.tab();\n    waitFor(() => {\n      expect(sIndex).to.equal(0);\n      expect(gIndex).to.equal(0);\n    });\n    await userEvent.keyboard('[ARROWRIGHT]');\n    waitFor(() => {\n      expect(sIndex).to.equal(0);\n      expect(gIndex).to.equal(1);\n    });\n    await userEvent.tab();\n    waitFor(() => {\n      expect(sIndex).to.equal(undefined);\n      expect(gIndex).to.equal(undefined);\n    });\n  });\n\n  it('triggers the proper drill events', async function () {\n    let sIndex: number | undefined;\n    let gIndex: number | undefined;\n\n    setupLineAreaChart({\n      drilling: 'on',\n      onItemDrill: (context) => {\n        sIndex = context.seriesIndex;\n        gIndex = context.groupIndex;\n      },\n      onGroupDrill: (context) => {\n        gIndex = context.groupIndex;\n        sIndex = undefined;\n      }\n    });\n\n    await userEvent.tab();\n    await userEvent.keyboard('[ENTER]');\n    waitFor(() => {\n      expect(sIndex).to.equal(0);\n      expect(gIndex).to.equal(0);\n    });\n\n    await userEvent.tab();\n    await userEvent.keyboard('[ENTER]');\n    waitFor(() => {\n      expect(sIndex == undefined).to.be.true;\n      expect(gIndex).to.equal(0);\n    });\n  });\n\n  it('triggers datatip on hover', async function () {\n    if (typeof jest == 'undefined') {\n      const content = await setupLineAreaChart();\n      const chart = content.getByRole('application');\n      const queryAllByDataObject = queryAllBy('data-oj-object');\n      const markers = queryAllByDataObject(chart, 'item');\n      await userEvent.hover(markers[0]);\n\n      waitFor(() => {\n        const targetElement = document.querySelector('[role=\"tooltip\"]') as HTMLElement;\n\n        let label = getByLabelText(targetElement, 'Value');\n        let value = getByLabelText(targetElement, '2');\n        expect(label).to.be.not.null;\n        expect(value).to.be.not.null;\n\n        label = getByLabelText(targetElement, 'Series');\n        value = getByLabelText(targetElement, 'Series 1');\n        expect(label).to.be.not.null;\n        expect(value).to.be.not.null;\n\n        label = getByLabelText(targetElement, 'Group');\n        value = getByLabelText(targetElement, 'Group A');\n        expect(label).to.be.not.null;\n        expect(value).to.be.not.null;\n      });\n    }\n  });\n});\n"],"names":["queryById","queryByAttribute","bind","queryAllBy","attribute","queryAllByAttribute","series","name","id","items","value","accessibleLabel","defaultProps","width","groups","getDataItem","i","j","setupLineAreaChart","async","options","locale","matchTranslationBundle","Set","default","translations","__variableDynamicImportRuntime0__","env","chartProps","chart","_jsx","LineAreaChart","render","RootEnvironmentProvider","environment","children","checkActiveItemGroupSeries","seriesIndex","groupIndex","activeDescendantId","getAttribute","activeElement","expect","not","null","to","equal","describe","beforeEach","setupUseTextDimensionsDependenciesMock","window","it","getByRole","userEvent","tab","item","getByLabelText","keyboard","selected","jest","selectionMode","selectedIds","markers","queryAllByDataObject","length","selectedItems","filter","forEach","itemStyle","getComputedStyle","getPropertyValue","unselectedItems","hiddenIds","sIndex","gIndex","onItemInput","waitFor","undefined","drilling","onItemDrill","context","onGroupDrill","be","true","hover","targetElement","document","querySelector","label"],"mappings":"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"}