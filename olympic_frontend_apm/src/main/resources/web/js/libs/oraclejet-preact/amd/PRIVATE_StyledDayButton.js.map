{"version":3,"file":"PRIVATE_StyledDayButton.js","sources":["../../src/PRIVATE_StyledDayButton/StyledDayButton.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { multiVariantStyles } from './themes/StyledDayButtonStyles.css';\nimport { styles as baseButtonStyles } from '../UNSAFE_BaseButton/themes/BaseButtonStyles.css';\nimport { classNames } from '../utils/UNSAFE_classNames';\n\ntype Props = {\n  /**\n   * Specifies that the button appears activated when the user activates the StyledDayButton.\n   * When true, this adds the :active selector to the styling.\n   * Combine this property with the other properties to get the styling you want.\n   */\n  isActivable?: boolean;\n  /**\n   * Specifies the styling of the button to look dimmed. \n   * Combine this property with the other properties to get the styling you want.\n   */\n  isDimmed?: boolean;\n  /**\n   * Specifies that the button appears hovered when the user hovers over the StyledDayButton.\n   * When true, this adds the :hover selector to the styling.\n   * Combine this property with the other properties to get the styling you want.\n   */\n  isHoverable?: boolean;\n  /**\n   * Specifies the styling of the button to look like a day that is adjacent to the current month.\n   * Combine this property with the other properties to get the styling you want.\n   */\n  isAdjacentMonth?: boolean;\n  /**\n   * Specifies the styling of the button to look like it is restricted. \n   * Combine this property with the other properties to get the styling you want.\n   */\n  isRestricted?: boolean;\n  /**\n   * Specifies the styling of the button to look like it is selected. \n   * Combine this property with the other properties to get the styling you want.\n   */\n  isSelected?: boolean;\n  /**\n   * Specifies the styling of the button to look like it is today. \n   * Combine this property with the other properties to get the styling you want.\n   */\n  isToday?: boolean;\n  /**\n   * Specifies the label of the day button. This will be the day of the month.\n   */\n  label: string;\n};\n\n/**\n * StyledDayButton is a controlled component that displays a stylized span for a day that goes into a Calendar grid.\n */\nconst StyledDayButton = ({\n  isActivable = false,\n  isAdjacentMonth = false,\n  isDimmed = false,\n  isHoverable = false,\n  isRestricted = false,\n  isSelected = false,\n  isToday = false,\n  label\n}: Props) => {\n  // The multiVariantStyles function is defined in StyledDayButtonStyles.css.ts,\n  // using the recipe utility provided by @vanilla-extract/recipes.\n  // This function is used to merge the base styles, variants, and compound variants\n  // into a single set of styles for text components based on the component's properties.\n  const variantClasses = multiVariantStyles({\n    active: isActivable ? 'isActivable' : 'notActiveable',\n    dimmed: isDimmed ? 'isDimmed' : 'notDimmed',\n    hover: isHoverable ? 'isHoverable' : 'notHoverable',\n    adjacentMonth: isAdjacentMonth ? 'isAdjacentMonth' : 'notAdjacentMonth',\n    restricted: isRestricted ? 'isRestricted' : 'notRestricted',\n    selected: isSelected ? 'isSelected' : 'notSelected',\n    today: isToday ? 'isToday' : 'notToday'\n  });\n\n  const classes = classNames([\n    baseButtonStyles.base,\n    baseButtonStyles.sizes.sm,\n    baseButtonStyles.styled,\n    variantClasses\n  ]);\n  return (\n    <span\n      class={classes}\n      // tabIndex={isDisabled || !isTabbable ? -1 : 0} perhaps this will go on the outer span\n    >\n      {label}\n    </span>\n  );\n};\n\nexport { StyledDayButton };\n"],"names":["isActivable","isAdjacentMonth","isDimmed","isHoverable","isRestricted","isSelected","isToday","label","variantClasses","multiVariantStyles","active","dimmed","hover","adjacentMonth","restricted","selected","today","classes","classNames","baseButtonStyles","base","styles","sizes","sm","styled","_jsx","class","children"],"mappings":"uWA2DwB,EACtBA,eAAc,EACdC,mBAAkB,EAClBC,YAAW,EACXC,eAAc,EACdC,gBAAe,EACfC,cAAa,EACbC,WAAU,EACVC,YAMA,MAAMC,EAAiBC,EAAAA,mBAAmB,CACxCC,OAAQV,EAAc,cAAgB,gBACtCW,OAAQT,EAAW,WAAa,YAChCU,MAAOT,EAAc,cAAgB,eACrCU,cAAeZ,EAAkB,kBAAoB,mBACrDa,WAAYV,EAAe,eAAiB,gBAC5CW,SAAUV,EAAa,aAAe,cACtCW,MAAOV,EAAU,UAAY,aAGzBW,EAAUC,EAAAA,WAAW,CACzBC,EAAAA,OAAiBC,KACjBD,EAAgBE,OAACC,MAAMC,GACvBJ,EAAAA,OAAiBK,OACjBhB,IAEF,OACEiB,EAAAA,YACEC,MAAOT,EAGNU,SAAApB,GAEH"}