{"version":3,"file":"utils-577611d8.js","sources":["../../src/UNSAFE_Theme/utils.ts"],"sourcesContent":["import type { CSSVarFunction } from '@vanilla-extract/private';\nimport { scaleVars } from '../Common/themes/themeContract.css';\nimport { rgb as toRgbString } from '../utils/PRIVATE_colorUtils';\n\n// Added: new types\ntype RGBType = `rgb(${CSSVarFunction})`;\ntype RGBAType = `rgba(${CSSVarFunction}, ${number})`;\n\nconst rgb = (rgb: CSSVarFunction) => toRgbString(rgb) as RGBType;\n// TODO: create rgba function in PRIVATE_colorUtils\nconst rgba = (rgb: CSSVarFunction, alpha: number): RGBAType => `rgba(${rgb}, ${alpha})`;\n\n// JET-59344 refactor of 'fallbackVar' from '@vanilla-extract/css'.\n// directly importing the function was causing vanilla-extract to be bundled into\n// the preact packages and causing issues with testing\nconst fallbackVar = (...values: [string, ...Array<string>]): CSSVarFunction => {\n  const finalValue = values.reverse().reduce((acc: string, value: string) => {\n    if (acc === '') {\n      acc = String(value);\n    } else {\n      if (typeof value !== 'string' || !/^var\\(--.*\\)$/.test(value)) {\n        throw new Error(`Invalid variable name: ${value}`);\n      }\n\n      acc = value.replace(/\\)$/, `, ${acc})`);\n    }\n    return acc;\n  }, '');\n\n  return finalValue as CSSVarFunction;\n};\n\n// For the default, where no scale var is specified, we use rem units, so that it will scale based on the root font-size.\nconst fallback = () => fallbackVar(scaleVars.size.units, '0.25rem');\nconst xUnits = (unit: number) => (unit === 1 ? fallback() : `calc(${unit} * ${fallback()})`);\n\nconst min = (val: string, minVal: string): string => `min(${val},${minVal})`;\nconst max = (val: string, minVal: string): string => `max(${val},${minVal})`;\n\nexport { rgb, rgba, xUnits, fallbackVar, min, max };\n\nexport type { RGBType, RGBAType };\n"],"names":["fallbackVar","values","reverse","reduce","acc","value","String","test","Error","replace","fallback","scaleVars","size","units","val","minVal","rgb","toRgbString","alpha","unit"],"mappings":"6GAQM,MAOAA,EAAc,IAAIC,IACHA,EAAOC,UAAUC,QAAO,CAACC,EAAaC,KACvD,GAAY,KAARD,EACFA,EAAME,OAAOD,OACR,CACL,GAAqB,iBAAVA,IAAuB,gBAAgBE,KAAKF,GACrD,MAAM,IAAIG,MAAM,0BAA0BH,KAG5CD,EAAMC,EAAMI,QAAQ,MAAO,KAAKL,KACjC,CACD,OAAOA,CAAG,GACT,IAMCM,EAAW,IAAMV,EAAYW,EAAAA,UAAUC,KAAKC,MAAO,iCAI7C,CAACC,EAAaC,IAA2B,OAAOD,KAAOC,WADvD,CAACD,EAAaC,IAA2B,OAAOD,KAAOC,WA5BtDC,GAAwBC,EAAWD,IAACA,UAEpC,CAACA,EAAqBE,IAA4B,QAAQF,MAAQE,cAwB/DC,GAA2B,IAATA,EAAaT,IAAa,QAAQS,OAAUT"}