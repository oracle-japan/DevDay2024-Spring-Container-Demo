{"version":3,"file":"MessageDetail-7ede4469.js","sources":["../../src/PRIVATE_Message/MessageDetail.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { ComponentChildren, Fragment } from 'preact';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { messageDetailStyles } from './themes/MessageStyles.css';\nimport { MessageRendererDataItem, MessageVariant } from './Message.types';\nimport { isValidValueForProp } from './MessageFormattingUtils';\n\ntype MessageWithDetailText = {\n  /**\n   * The detail text for the message\n   */\n  detail?: string;\n};\n\n/**\n * Props for the Detail component\n */\ntype Props<K, D> = {\n  /**\n   * The data item for rendering the detail content\n   */\n  item: MessageRendererDataItem<K, D>;\n\n  /**\n   * A custom renderer for rendering the detail content\n   */\n  renderer?: (item: MessageRendererDataItem<K, D>) => ComponentChildren;\n\n  /**\n   * Style variant\n   */\n  variant?: MessageVariant;\n};\n\n/**\n * Default renderer for rendering the detail content.\n *\n * @param item The data item object\n * @returns Rendered detail content\n */\nfunction defaultDetailRenderer<D extends MessageWithDetailText>(\n  item: MessageRendererDataItem<unknown, D>\n): ComponentChildren {\n  const { detail } = item.data;\n  // If the detail is null or an empty string, do not render the\n  // content row\n  if (!isValidValueForProp(detail)) {\n    return null;\n  }\n  return <Fragment>{detail}</Fragment>;\n}\n\n/**\n * Detail Component for rendering the detail content of the Message\n */\nfunction MessageDetail<K, D extends MessageWithDetailText>({\n  item,\n  renderer,\n  variant = 'banner'\n}: Props<K, D>) {\n  const isCustomRendered = renderer != null;\n  const renderedContent = (renderer ?? defaultDetailRenderer)(item);\n\n  if (renderedContent == null) return null;\n\n  // If detail content is rendered, then wrap it in a div with specified style classes\n  const classes = classNames([messageDetailStyles.base, messageDetailStyles[variant]]);\n  return (\n    <div class={classes} {...(isCustomRendered ? { 'data-oj-message-custom-detail': '' } : {})}>\n      {renderedContent}\n    </div>\n  );\n}\n\nexport { MessageDetail };\n"],"names":["defaultDetailRenderer","item","detail","data","isValidValueForProp","_jsx","jsx","Fragment","children","renderer","variant","isCustomRendered","renderedContent","classes","classNames","messageDetailStyles","base","class"],"mappings":"8LA+CA,SAASA,EACPC,GAEA,MAAMC,OAAEA,GAAWD,EAAKE,KAGxB,OAAKC,EAAAA,oBAAoBF,GAGlBG,EAACC,IAAAC,EAAQA,SAAE,CAAAC,SAAAN,IAFT,IAGX,iBAKA,UAA2DD,KACzDA,EAAIQ,SACJA,EAAQC,QACRA,EAAU,WAEV,MAAMC,EAA+B,MAAZF,EACnBG,GAAmBH,GAAYT,GAAuBC,GAE5D,GAAuB,MAAnBW,EAAyB,OAAO,KAGpC,MAAMC,EAAUC,EAAUA,WAAC,CAACC,EAAmBA,oBAACC,KAAMD,sBAAoBL,KAC1E,OACEL,EAAKC,IAAA,MAAA,CAAAW,MAAOJ,KAAcF,EAAmB,CAAE,gCAAiC,IAAO,CAAE,EACtFH,SAAAI,GAGP"}