{"version":3,"file":"BarChart.spec.js","sources":["../../../../src/UNSAFE_BarChart/__test__/BarChart.spec.tsx"],"sourcesContent":["import { render } from '@testing-library/preact';\nimport { expect } from 'chai';\nimport { BarChart } from '../';\nimport { setupUseTextDimensionsDependenciesMock } from '../../../test/mocks/mockUseTextDimensionsDependencies';\nimport { ComponentProps } from 'preact/compat';\nimport { matchTranslationBundle } from '../../utils/UNSAFE_matchTranslationBundle';\nimport { RootEnvironment, RootEnvironmentProvider } from '../../UNSAFE_Environment';\n\ntype ChartProps = ComponentProps<typeof BarChart>\n\nconst series = [\n    {\n        name: 'Series 1',\n        id: 'Series 1',\n        items: [\n            {\n                id: '1',\n                value: 2\n            },\n            {\n                id: '2',\n                value: 2\n            }\n        ]\n    }\n]\nconst setupBarChart = async (\n    props: ChartProps = {\n        width: '500px',\n        height: '500px',\n        series,\n        groups: [{ id: 'Group1' }, { id: \"GroupB\" }],\n        getDataItem: (i: number, j: number) => series[i].items[j],\n        'aria-label': 'ariaText'\n    }\n) => {\n    const locale = matchTranslationBundle(['en'], new Set(['en-US', 'en']));\n    const { default: translations } = await import(`../../resources/nls/${locale}/bundle.ts`);\n    const env: Partial<RootEnvironment> = {\n        translations: { '@oracle/oraclejet-preact': translations }\n    };\n    const chart = <BarChart {...props}></BarChart>;\n\n    return render(<RootEnvironmentProvider environment={env}>{chart}</RootEnvironmentProvider>);\n};\n\ndescribe('Test BarChart component', () => {\n    beforeEach(() => {\n        setupUseTextDimensionsDependenciesMock(window);\n    });\n\n    it('render', async function () {\n        const content = await setupBarChart();\n        const ariaRole = content.getByRole('application');\n        expect(ariaRole).not.null;\n    });\n});\n\n"],"names":["series","name","id","items","value","setupBarChart","async","props","width","height","groups","getDataItem","i","j","locale","matchTranslationBundle","Set","default","translations","__variableDynamicImportRuntime0__","env","chart","_jsx","BarChart","render","RootEnvironmentProvider","environment","children","describe","beforeEach","setupUseTextDimensionsDependenciesMock","window","it","ariaRole","getByRole","expect","not","null"],"mappings":"gnHAUA,MAAMA,GAAS,CACX,CACIC,KAAM,WACNC,GAAI,WACJC,MAAO,CACH,CACID,GAAI,IACJE,MAAO,GAEX,CACIF,GAAI,IACJE,MAAO,MAKjBC,GAAgBC,MAClBC,EAAoB,CAChBC,MAAO,QACPC,OAAQ,QACRT,UACAU,OAAQ,CAAC,CAAER,GAAI,UAAY,CAAEA,GAAI,WACjCS,YAAa,CAACC,EAAWC,IAAcb,GAAOY,GAAGT,MAAMU,GACvD,aAAc,eAGlB,MAAMC,EAASC,yBAAuB,CAAC,MAAO,IAAIC,IAAI,CAAC,QAAS,SACxDC,QAASC,i6KAAuBC,CAAO,uBAAuBL,eAChEM,EAAgC,CAClCF,aAAc,CAAE,2BAA4BA,IAE1CG,EAAQC,EAAAA,IAACC,EAAAA,SAAa,IAAAhB,IAE5B,OAAOiB,EAAMA,OAACF,MAACG,EAAAA,wBAAwB,CAAAC,YAAaN,EAAMO,SAAAN,IAAiC,EAG/FO,SAAS,2BAA2B,KAChCC,YAAW,KACPC,EAAsCA,uCAACC,OAAO,IAGlDC,GAAG,UAAU1B,iBACT,MACM2B,SADgB5B,MACG6B,UAAU,eACnCC,EAAAA,OAAOF,GAAUG,IAAIC,IACzB,GAAE"}