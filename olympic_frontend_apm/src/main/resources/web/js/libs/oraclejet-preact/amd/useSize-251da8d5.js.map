{"version":3,"file":"useSize-251da8d5.js","sources":["../../src/hooks/PRIVATE_useSize/useSize.ts"],"sourcesContent":["import { RefObject } from 'preact';\nimport { useState, useCallback } from 'preact/hooks';\nimport { useResizeObserver } from '../UNSAFE_useResizeObserver';\n\nconst useSize = (\n  ref: RefObject<Element>,\n  resizeObserverOptions: ResizeObserverOptions = { box: 'content-box' }\n) => {\n  const [size, setSize] = useState<{ width: number; height: number }>();\n\n  useResizeObserver({\n    ref,\n    callback: useCallback(\n      (entry) => {\n        const boxSize =\n          resizeObserverOptions.box === 'border-box' ? entry.borderBoxSize : entry.contentBoxSize;\n        const newWidth = boxSize[0].inlineSize;\n        const newHeight = boxSize[0].blockSize;\n        setSize({ width: newWidth, height: newHeight });\n      },\n      [resizeObserverOptions]\n    ),\n    resizeObserverOptions\n  });\n\n  return size;\n};\n\nexport { useSize };\n"],"names":["ref","resizeObserverOptions","box","size","setSize","useState","useResizeObserver","callback","useCallback","entry","boxSize","borderBoxSize","contentBoxSize","newWidth","inlineSize","newHeight","blockSize","width","height"],"mappings":"yGAIgB,CACdA,EACAC,EAA+C,CAAEC,IAAK,kBAEtD,MAAOC,EAAMC,GAAWC,EAAQA,WAiBhC,OAfAC,oBAAkB,CAChBN,MACAO,SAAUC,EAAAA,aACPC,IACC,MAAMC,EAC0B,eAA9BT,EAAsBC,IAAuBO,EAAME,cAAgBF,EAAMG,eACrEC,EAAWH,EAAQ,GAAGI,WACtBC,EAAYL,EAAQ,GAAGM,UAC7BZ,EAAQ,CAAEa,MAAOJ,EAAUK,OAAQH,GAAY,GAEjD,CAACd,IAEHA,0BAGKE,CAAI"}