{"version":3,"file":"PieChart.spec.js","sources":["../../../../src/UNSAFE_PieChart/__test__/PieChart.spec.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { render } from '@testing-library/preact';\nimport { expect } from 'chai';\nimport { PieChart } from '../';\n\nconst pieData = [\n  { id: 1, value: 5 },\n  { id: 2, value: 4 },\n  { id: 3, value: 4 }\n];\n\ndescribe('Test PieChart component', () => {\n  it('render', async function () {\n    const content = render(\n      <PieChart\n        data={pieData}\n        width={'400px'}\n        height={'400px'}\n        aria-label=\"pie chart label\"\n      />\n    );\n    const ariaText = await content.getAllByLabelText('pie chart label');\n    expect(ariaText).not.null;\n\n    const ariaRole = content.getByRole('application');\n    expect(ariaRole).not.null;\n  });\n});\n"],"names":["pieData","id","value","describe","it","async","content","render","_jsx","PieChart","data","width","height","ariaText","getAllByLabelText","expect","not","null","ariaRole","getByRole"],"mappings":"83EAYA,MAAMA,GAAU,CACd,CAAEC,GAAI,EAAGC,MAAO,GAChB,CAAED,GAAI,EAAGC,MAAO,GAChB,CAAED,GAAI,EAAGC,MAAO,IAGlBC,SAAS,2BAA2B,KAClCC,GAAG,UAAUC,iBACX,MAAMC,EAAUC,EAAAA,OACdC,EAAAA,IAACC,EAAAA,SAAQ,CACPC,KAAMV,GACNW,MAAO,QACPC,OAAQ,QACG,aAAA,qBAGTC,QAAiBP,EAAQQ,kBAAkB,mBACjDC,EAAAA,OAAOF,GAAUG,IAAIC,KAErB,MAAMC,EAAWZ,EAAQa,UAAU,eACnCJ,EAAAA,OAAOG,GAAUF,IAAIC,IACvB,GAAE"}